"OrganizationLogin","RepositoryName","ReviewerLogin","HtmlUrl","Body"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/3347#discussion_r304621310","Ok, `Test MSBuild Mac` and `Test MSBuild for Devices Mac` might be a little better."
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/5599#issuecomment-775175088","@dellis1972 I figured this out friday, I think: https://github.com/xamarin/xamarin-android/pull/5597"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/6986#issuecomment-1120005083","Ignore above, it was a `net6.0-android` app. When testing `net7.0-android` apps, Debug builds work.

But a `Release` build logs this and then crashes after:
```
05-06 15:59:29.032  5556  5556 D Mono    : AOT NOT FOUND: (wrapper managed-to-native) Interop/Globalization:<GetSortHandle>g____PInvoke__|10_0 (byte*,intptr*).
```
`ndk-stack` gives:
```
********** Crash dump: **********
Build fingerprint: 'google/redfin/redfin:12/SP2A.220305.012/8177914:user/release-keys'
#00 0x0000000000000000 <unknown>
#01 0x0000000000291de4 /data/app/~~ItthawCn0DOlo1Ki4imiRA==/com.companyname.foo-W3RWpuZlKreSEizITM-Dpg==/split_config.arm64_v8a.apk!libmonosgen-2.0.so (BuildId: 37b4820b2e370de25a652bab573817fa6b135ac1)
                                                                                                                                                        GlobalizationNative_GetSortHandle
                                                                                                                                                        /__w/1/s\src/native/libs/System.Globalization.Native/pal_collation.c:462:46
#02 0x000000000000f6d0 <anonymous:74e811b000>
Crash dump is completed
```

Full log: [adb.txt](https://github.com/xamarin/xamarin-android/files/8643599/adb.txt)"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/3523#discussion_r316205822","I have a feeling that NuGet authors will have to use `monoandroid10.0` for their directory names... where they have been used to using `monoandroid81`, `monoandroid90`, etc."
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/6118#discussion_r675851112","The target that uses the `@(Import)` item group doesn't run if you set `$(DisableImplicitNamespaceImports)`:

https://github.com/dotnet/sdk/blob/93b432bd8e73bb68aa4621db8a967d62e6f0cc23/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.GenerateImplicitNamespaceImports.targets#L35-L38

Here is the commit that implements this:

https://github.com/dotnet/sdk/commit/85943958e5a01d6bbd39a947aec2a4a37b8ba7cf"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/6620#issuecomment-1007633600","The one performance test that failed, I don't see anything related to this change:

![image](https://user-images.githubusercontent.com/840039/148589321-b781cbff-0b71-43a5-ab4c-b23accddf5bc.png)

`<D8/>` or `<R8/>` didn't run, so going to merge."
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/6541#issuecomment-988107739","/azp run"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/1602#discussion_r184710982","Did this just get pasted twice?"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/5095#discussion_r487122227","As per the bug we were seeing with `WorkingDirectory` and `<Aapt2Link/>`, I think this needs to be:
```suggestion
					var assetDir = GetFullPath (AdditionalAndroidAssetPaths [i].ItemSpec.TrimEnd ('\\'));
					if (Directory.Exists (assetDir)) {
						cmd.Add (""-A"");
						cmd.Add (assetDir);
					} else {
						LogDebugMessage (""asset directory did not exist: "" + assetDir);
					}
```"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/2643#discussion_r250238388","After using `IndexOf` + `Substring`, I think it's still OK to just compare `targetFrameworkIdentifier == ""MonoAndroid""`:
```csharp
//
// Summary:
//     Reports the zero-based index of the first occurrence of the specified string
//     in the current System.String object. A parameter specifies the type of search
//     to use for the specified string.
//
// Returns:
//     The index position of the value parameter if that string is found, or -1 if it
//     is not. If value is System.String.Empty, the return value is 0.
public int IndexOf (String value, StringComparison comparisonType);
```
It should be the first instance of `,` and `targetFrameworkIdentifier` will be everything before it."
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/5991#issuecomment-856143652","The issue in https://github.com/xamarin/xamarin-android/pull/5991#issuecomment-854216388 should be working now.

I believe I was only seeing the problem in an earlier incarnation of https://github.com/xamarin/monodroid/pull/1205."
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/6139#discussion_r704680228","I can't find anything sensible to do here, `$([System.Version]::Parse())` or `$([MSBuild]:VersionGreaterThanOrEquals())` throw during evaluation.

I think adding the test case is fine for now, and you would get the above error from `NuGet.targets`?"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/6922#issuecomment-1098640052","@pjcollins there is something else weird here, but I think it's our test.

The cases where macOS failed, it seems like `usesAssemblyStore=false`. So how would this class know to check if the files exist in that case?

https://github.com/xamarin/xamarin-android/blob/968c4245d3bb24670f402eb207109ca837fdd195/src/Xamarin.Android.Build.Tasks/Tests/Xamarin.Android.Build.Tests/XASdkTests.cs#L634-L638

Let's look into this again if it fails like this later..."
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/4652#discussion_r420398207","I was mainly trying to get the build log shorter 👀 

It seems both the startup & MSBuild perf tests fail to build, which is odd."
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/5457#discussion_r551372218","Are there some more of these? If I ignore tests:
```
> git grep ZipArchive.Open
build-tools/Xamarin.Android.Tools.BootstrapTasks/Xamarin.Android.Tools.BootstrapTasks/CheckApiCompatibility.cs:                                 using (var zip = ZipArchive.Open (zipFile, FileMode.Open)) {
build-tools/Xamarin.Android.Tools.BootstrapTasks/Xamarin.Android.Tools.BootstrapTasks/UnzipDirectoryChildren.cs:                        using (var zip = ZipArchive.Open (sourceFile, FileMode.Open)) {
build-tools/Xamarin.Android.Tools.BootstrapTasks/Xamarin.Android.Tools.BootstrapTasks/Zip.cs:                   using (var zip  = ZipArchive.Open (File.ItemSpec, FileMode.OpenOrCreate)) {
src/Xamarin.Android.Build.Tasks/Tasks/CreateLibraryResourceArchive.cs:                                          using (var archive = ZipArchive.Open (p, FileMode.Open)) {
src/Xamarin.Android.Build.Tasks/Tasks/Unzip.cs:                         using (var z = ZipArchive.Open (pair.Source.ItemSpec, FileMode.Open))
```"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/2612#discussion_r248042343","Since https://github.com/xamarin/xamarin-android/commit/e390702773365ffe3da975181d0aa398d42731d0 we dropped support for referencing exe's at the MSBuild level. I didn't add support for it here, but if there is some scenario you think we'll hit, I can add it.

Offhand I can't think of a case where a `.dll` would reference a random `.exe`?"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/7002#issuecomment-1132016953","/azp run"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/5578#issuecomment-771694905","I tried to test these changes on an API 19 emulator, but ran into: https://github.com/xamarin/monodroid/issues/1161"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/6118#discussion_r695943730","You can have an `.aar` with resources, then you might want to use `Resource.designer.cs` values from C#.

So I don't think we need this by default, but it's there if you need to turn it off."
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/5317#discussion_r574803666","An idea that could be done in a future iteration.

Could this step also modify this class:

https://github.com/xamarin/xamarin-android/blob/7ba62bac5a25eb783a6da9c2b6a989a820695a1f/src/Mono.Android/Android.Runtime/ResourceIdManager.cs#L6-L9

If `UpdateIdValues()` was a completely empty method, some reflection could be skipped at startup."
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/3483#discussion_r313014269","same here:
```csharp
if (string.IsNullOrWhiteSpace (cmd) || !ExecuteForAbi (cmd, currentResourceOutputFile)) {
```"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/4132#discussion_r372070891","Should we make this a `Regex` just in case the version number changes? If this just removed an entire line that matches: `^\/\/\s*Runtime Version:`"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/5099#discussion_r485936099","I'll list `@(EmbeddedNativeLibrary)`.

We are aspiring to change all these to:
```xml
<!-- Include and bind -->
<AndroidLibrary Include=""foo.aar"" Bind=""true"" />
<!-- Just include, do not bind -->
<AndroidLibrary Include=""bar.aar"" />
<AndroidLibrary Include=""bar.jar"" />
<!-- Native libraries need ABI directory -->
<AndroidLibrary Include=""armeabi-v7a\libfoo.so"" />
<AndroidLibrary Include=""x86\libfoo.so"" />
```"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/4669#issuecomment-630873894","/azp run"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/5953#discussion_r638090809","I think the code is the same, the first one would be the same as doing:

```csharp
TextContent = new Func<string> (ProcessManifestTemplate)
```

I've heard putting `() => ProcessManifestTemplate()` prevents a delegate object from being created, but that performance shouldn't be needed here."
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/5165#discussion_r498517486","My plan was to not import or ship `Xamarin.Android.Aapt.targets` at all:

https://github.com/xamarin/xamarin-android/blob/02e86b5a6bbd6f938c16cf30bc709543565bb34e/src/Xamarin.Android.Build.Tasks/Xamarin.Android.Common.targets#L364-L365

However this is wrong ☝️ , it needs to be checking `$(UsingAndroidNETSdk)` instead.

This should also work:

https://github.com/xamarin/xamarin-android/blob/91b66985704f1592b8c55819f7ff48d5e7353900/src/Xamarin.Android.Build.Tasks/Xamarin.Android.Common.targets#L1160-L1161"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/5539#discussion_r578752068","Fixed the ones in xamarin-android here: https://github.com/xamarin/xamarin-android/pull/5636"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/5748#issuecomment-833158805","/azp run"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/6491#discussion_r753088338","NOTE: two `!*Darwin*` and `!*32*` won't currently work -- there is a bug in AzDO."
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/5138#discussion_r492051253","Since this could be a 4MB string:

https://github.com/xamarin/xamarin-android/blob/c98cb40f35a208c04466bb3fccb3cd25d463781c/build-tools/scripts/TestApks.targets#L94-L100

Do you think it's worth making a `GetLogcatOutput` method that would write each line to a file at a time? Instead of making a giant string?"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/6323#issuecomment-924382406","The designer tests keep failing on NuGet restore, I think we can ignore:
```
(Restore target) -> 
  /Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/NuGet.targets(131,5): error : Unable to load the service index for source https://pkgs.dev.azure.com/***/DevDiv/_packaging/Xamarin.UITooling/nuget/v3/index.json. [/Users/runner/work/1/s/UITools/Designer/Xamarin.Designer.Android/Xamarin.AndroidDesigner.sln]
/Library/Frameworks/Mono.framework/Versions/6.12.0/lib/mono/msbuild/Current/bin/NuGet.targets(131,5): error :   Response status code does not indicate success: 401 (Unauthorized). [/Users/runner/work/1/s/UITools/Designer/Xamarin.Designer.Android/Xamarin.AndroidDesigner.sln]
```"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/4668#issuecomment-626823738","This looks OK:
* Designer macOS has been failing since last week on master
* The one test failure is unrelated: `warning XARDF7024: System.IO.IOException: The directory is not empty.`"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/5159#discussion_r495238001","Should we consider making this the default for all projects?

We already do it for .NET 6:

https://github.com/xamarin/xamarin-android/blob/885b57bdcf32e559961b183e1537844c5aa8143e/src/Xamarin.Android.Build.Tasks/Microsoft.Android.Sdk/targets/Microsoft.Android.Sdk.DefaultProperties.props#L13"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/5529#discussion_r561569900","Does this need to check some MSBuild property to skip it? Would it attempt to sign packages on Mac locally otherwise?"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/4850#issuecomment-648141072","> Could not AOT the assembly: System.Core.dll

This looks similar to some of the file locking issues we see on the bots, since it passes for me locally, let me do a retry."
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/2844#discussion_r270588501","So this will probably need to use TryGetValue now, somehow NUnit had a custom dictionary before that returned null when the key was not found?"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/4176#discussion_r371287616","Thanks to Pobst, it should go through here now: https://github.com/xamarin/xamarin-android/blob/1bee4ad176863bdfc0de258542a2c3685fc60f2d/src/Xamarin.Android.Build.Tasks/Tasks/AndroidTask.cs#L16-L21

I think using the default ""let it throw"" behavior is better now as long as this subclasses `AndroidTask`."
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/6383#issuecomment-940281693","The spec says the native platform files always win:

https://github.com/xamarin/xamarin-android/blob/main/Documentation/guides/OneDotNetSingleProject.md

If you want to use the MSBuild properties, you can just leave the values blank in `Info.plist` or `AndroidManifest.xml` (or whatever the WinUI version is). You can still set MSBuild properties in `.csproj` files and override their values from CI.

I updated the test case some -- it needs to set all the properties to weird values so we see who wins."
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/5646#discussion_r579511935","I think this should be:

```suggestion
    <UseNativeHttpHandler Condition="" '$(UseNativeHttpHandler)' == '' "">true</UseNativeHttpHandler>
```

So that users can override it in their `.csproj` file."
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/4943#discussion_r461625359","Do we need this in every project? Can we put it in a new `Directory.Build.props` or `Configuration.props`?"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/3483#discussion_r313014182","maybe this would be cleaner as:
```csharp
if (string.IsNullOrWhiteSpace (cmd) || !ExecuteForAbi (cmd, currentResourceOutputFile)) {
```"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/1569#discussion_r182623172","This is the only one I didn't address, I agree I would rather use `System.Xml.Linq`, too.

I just didn't think it was worth rewriting all this code--but if we were going to change the file drastically or something it might be worth it."
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/2481#discussion_r238462158","`Xamarin.Android.Common.props` should be imported here already."
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/6022#discussion_r655361320","Could simplify this line:
```suggestion
      <_MonoComponent Condition="" '$(AndroidEnableProfiler)' == 'true' "" Include=""diagnostics_tracing"" />
```"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/5296#issuecomment-728080519","/azp run"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/2841#discussion_r271492043","The quoted stuff was all from:
```
[app_bundle]: https://developer.android.com/platform/technology/app-bundle
```
👍 I'll indent it."
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/2956#discussion_r274242612","@jonpryor I bet this `UseSharedRuntime ?` check was important...

I need to look at what is in the typemaps in both cases."
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/3884#discussion_r343254472","Right so we only should check if `$(TargetPath)` changes, and is newer than a stamp file or something.

Something like (_untested_):

```xml
<Target Name=""AfterBuild""
    Inputs=""$(TargetPath)""
    Outputs=""$(IntermediateOutputPath)\CheckApiCompatibility.stamp"">
<!-- your existing stuff here ... -->
  <Touch Files=""$(IntermediateOutputPath)\CheckApiCompatibility.stamp"" AlwaysCreate=""True"" />
  <ItemGroup>
    <FileWrites Include=""$(IntermediateOutputPath)\CheckApiCompatibility.stamp"" />
  </ItemGroup>
</Target>
```

This should make the second call skip `AfterBuild` if the assembly didn't change.

When I build `Xamarin.Android.sln`, I rarely change `Mono.Android.csproj` when working on MSBuild-related stuff. This should save ~3 seconds from my dev-loop."
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/6598#issuecomment-1079370256","/azp run"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/6585#discussion_r774189004","Sounds good, we can leave `-m:1` for now."
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/5536#discussion_r562785927","I don't think you need to set `$(LangVersion)` with `$(LangVersion)`.

This imports `Configuration.props`, so I think it would get the value you want;

https://github.com/xamarin/xamarin-android/blob/1877dd5ebee90452c6ab2cc33a58498a83ea7c1f/Configuration.props#L38"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/6725#discussion_r806870491","Should we give an example in the commit message what the problem here was?"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/2790#discussion_r262716250","We somehow lost the `KnownPackages.Acr_UserDialogs` NuGet in this file: https://github.com/xamarin/xamarin-android/commit/1d608bf194f5cddcb4d61a4bca3602f920da5246#diff-4469ed45319624df448a82ed4bc98b6d"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/3357#discussion_r318579311","I think we don't need it on this one, though. `<Touch/>` is called right before?"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/5717#issuecomment-794459674","It would be nice if this had the full strack trace here, but we just have `.Message`:

https://github.com/xamarin/XamarinComponents/blob/4f5a57bd567f46f4b67622ab718b50485725463f/Util/Xamarin.Build.Download/source/Xamarin.Build.Download/XamarinDownloadArchives.cs#L182"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/2288#discussion_r224788265","Whoops I think this one should be the new `XamarinFormsAndroidApplicationProject`."
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/4466#issuecomment-604681084","Since this breaks things, I don't think it is important enough to continue.

I'll leave the branch around if we ever want to try this again."
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/6771#issuecomment-1042191603","/azp run"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/5539#issuecomment-878582362","To test this currently, you would need: [MonoAOTCompiler.zip](https://github.com/xamarin/xamarin-android/files/6804264/MonoAOTCompiler.zip)

Copy `MonoAOTCompiler.dll` to `~\android-toolchain\dotnet\packs\Microsoft.NET.Runtime.MonoAOTCompiler.Task\6.0.0-preview.7.*\tasks\net6.0`. This will be needed until the changes land in dotnet/runtime and flow to us.

"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/5578#discussion_r568147143","If I remove it, I get:
```
debug-app-helper.cc(210,10): error GF586CA7D: cannot initialize return object of type 'char *' with an lvalue of type 'const char [19]'
```"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/2348#discussion_r228919182","We might want to just compare `Name`, if we want this to work the same as `[assembly:LinkerSafeAttribute]`: https://github.com/mono/linker/blob/44199a2c62ff221f92c33cbb4ee3e35588adaf4a/tuner/Mono.Tuner/CustomizeActions.cs#L47

This would give the option to add this to the support libraries, and not have to build with a new (not yet released) Xamarin.Android."
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/4767#discussion_r441666920","I added `XA0035`, which seems a lot better."
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/3768#discussion_r334484326","Does this need all 4 steps here? or can it just call `Install`?"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/7013#discussion_r877074263","Do you really need all three of these? Are we missing a dependency where you should be able to put `Xamarin.AndroidX.Wear` and that's it?"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/5486#discussion_r557497179","Ok, the build is broken because the `.pkg` file isn't being created by this project now.

I think you need to import `Configuration.props` otherwise, this target won't run because `$(HostOS)` is blank:

https://github.com/xamarin/xamarin-android/blob/d17ea01b4036c2592ae247b24af14739d949f245/build-tools/create-pkg/create-pkg.targets#L148-L150"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/6072#discussion_r673430313","I think I should just remove all the `goto` here and put `return proxy` instead."
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/6306#discussion_r711119490","I saw this message ~2700 times in a build log. It is still logging the *other* case, which I think is sufficient."
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/2958#discussion_r274752062","I updated the commit message around this conversation 👍 "
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/7025#issuecomment-1134751607","/azp run"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/6901#issuecomment-1119040508","Right now I don't think you can use LLVM without having an NDK -- but I was thinking we could fix that? Like it should be possible to work?

If you didn't need the NDK, we could enable LLVM by default for `Release` builds to improve startup times."
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/3979#discussion_r352977788","It might be this was just something broken on mono/master:

    Step Xamarin.Android.Prepare.Step_ThirdPartyNotices failed:
    License file external\mono\sdks\out\android-tpn\external\llvm\LICENSE.TXT does not exist

It looks like they moved the submodule? So maybe it's in `external\llvm-project` now?

https://github.com/mono/mono/tree/a2f9fb77a3704049ffe5de32362029ece154ee4c/external

I am building a mono archive based off 2019-10, will give that a try."
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/5539#discussion_r574818091","We don't have darc in this repo at all yet. Putting the version number in `Configuration.props` follows our current pattern until that is in place.

@pjcollins will be looking into darc, I think. We can start with getting it to bump the dotnet/sdk version."
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/3375#discussion_r312916963","I think all these `/t:Restore` should just use `/restore` instead:

```suggestion
        msbuildArguments: /restore /t:Build,ZipBuildStatus,ZipTestResults /p:BuildStatusZipOutputPath=$(Build.ArtifactStagingDirectory) /p:TestResultZipOutputPath=$(Build.ArtifactStagingDirectory)
```

Both will probably work in this case, but I've seen some weird things if you run the `Restore` target first followed with `,Build,Etc`."
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/3992#discussion_r366621222","When I last attempted to split up `<GenerateJavaStubs/>`, it hurt performance a bit, I had to move the `DirectoryAssemblyResolver` to be stored in `RegisterTaskObject` so it could be shared across multiple tasks:

https://github.com/xamarin/xamarin-android/compare/master...jonathanpeppers:split-generatejavastubs

This branch isn't quite finished, the `AndroidManifest.xml` portion is broken."
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/3227#discussion_r293894163","I think we do need the `eol` setting: https://git-scm.com/docs/gitattributes#Documentation/gitattributes.txt-Settostringvaluecrlf

To test this I did:
```
>  rm .\ThirdPartyNotices.txt
>  git checkout HEAD .\ThirdPartyNotices.txt
```

And then it switches to Windows line endings when I look in notepad++:

![image](https://user-images.githubusercontent.com/840039/59525039-ea636100-8e9a-11e9-972e-8af14636e2ba.png)

Using just `text`, and trying again--it didn't work.

But the docs aren't exactly clear if someone else knows better?
"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/1720#discussion_r200498275","This one could also use `TryGetValue`, sorry I didn't see it before."
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/2162#discussion_r216087396","👍 I guess we weren't doing that at all before???"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/4965#discussion_r464628525","Instead of reading the file back into memory, could we make a helper method that logs and writes for each call?

Something like:
```csharp
LogDebugMessage (""[Generator] response file: {0}"", responseFile);

WriteLine (sw, ""--global"");
WriteLine (sw, ""--public"");

// The other switches...

void WriteLine (StreamWriter sw, string line)
{
    sw.WriteLine (line);
    Log.LogDebugMessage (line);
}
```"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/4236#issuecomment-584208964","The build failures look to be on master, too: apk sizes, tls tests, designer, libZipSharp/DotNetPackageXASdkProject test."
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/5920#discussion_r631083264","I reworked the task, so it only writes the file when needed."
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/5099#discussion_r487274029","> attempting to extract @(EmbeddedResource)s when an assembly doesn't have any.

Maybe I need to see if this can work without any assembly-level attributes at all."
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/2984#discussion_r275831537","`.Any()`"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/6901#issuecomment-1122596769","@pjcollins in https://github.com/xamarin/xamarin-android/pull/6539 I remember some LLVM tests failed when I tried, but there are other changes in xamarin-android/main now. Could the LLVM-IR support @grendello added make this work now?

If you're testing, and LLVM is working without an NDK let's try it."
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/5596#issuecomment-774198253","/azp run"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/5245#discussion_r516231310","Does this need to check `$(HostOS)` and use either: `osx-x64`, `windows-x64`, or `linux-x64`?"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/6896#discussion_r848459265","Is there a way this could check for `<= 32` then use 32? Trying to think of what this would look like over time as more API levels are added."
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/6844#discussion_r833364855","I think this might need to check if it is blank, like it does in .NET 6:

https://github.com/xamarin/xamarin-android/blob/d4da1c252f45c4910abc1bd9e5be9ecf9dc683a0/src/Xamarin.Android.Build.Tasks/Microsoft.Android.Sdk/targets/Microsoft.Android.Sdk.DefaultProperties.targets#L13

This way you can set it to `false`."
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/6541#discussion_r763176221","I agree with the concern here: https://github.com/xamarin/xamarin-android/pull/6541#issuecomment-985045429

If this is `sealed`, how do you implement ""ssl pinning"" in an app?"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/5111#discussion_r498824966","👍  I haven't seen this syntax yet, seems better than this:
```csharp
List<Tuple<int, CodeMemberField>>
```"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/5717#issuecomment-796095980","@dellis1972 do you want to try setting `$(XamarinBuildDownloadDir)` to a folder in `bin/TestDebug/temp/{TestName}`?

https://github.com/xamarin/XamarinComponents/blob/4f5a57bd567f46f4b67622ab718b50485725463f/Util/Xamarin.Build.Download/source/Xamarin.Build.Download/Xamarin.Build.Download.targets#L9

Then when it retries, I think it could start with a fresh empty directory."
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/4595#discussion_r412450880","Should this entire file go in this `DotNet5.md`?

https://github.com/xamarin/xamarin-android/blob/master/Documentation/guides/DotNet5.md

Then maybe we don't even need a `README.md` here?"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/5250#discussion_r519010579","Maybe we should use `InetAccess` instead? Would all `InetAccess` tests fail without crypto?"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/4459#discussion_r400411074","I'm feeling as the number of MSBuild files start to grow...

@dellis1972 do you think we should start putting a short comment/description at the top of each new MSBuild file to explain what the file is?

So we would want just a short sentence explaining the difference between `App.Runtime.proj` and `App.Ref.proj`? `Xamarin.Android.Lite.proj`, too?

If I made a `Xamarin.Android.BuildOrder.targets` the name is almost self-explanatory, but would probably be helpful to say ""this is where all `$(FooDependsOn)` properties go""."
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/2624#discussion_r248858423","@dellis1972 it looks like @brendanzagaeski looked at these codes? https://github.com/xamarin/xamarin-android/pull/2258

They weren't ""actionable""?"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/4873#issuecomment-651298884","So this appears to only be broken for specifically API 29, because it isn't listed here:

https://github.com/xamarin/xamarin-android-tools/blob/2d3690e428c8523b3779f84e5c804d1fd3c0d6fe/src/Xamarin.Android.Tools.AndroidSdk/AndroidVersions.cs#L139-L176

So the question is, do we ship all the `AndroidApiInfo.xml` or update this list?"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/5693#issuecomment-791537370","I see a new version `6.0.100-preview.2.21155.2`, waiting to see if that is what we should bump to."
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/5250#discussion_r519011784","I'm curious can remove `$(AssemblyName)` here and it uses the name of the `.csproj` file?"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/5930#issuecomment-842582757","From the `.apkdesc` files we have, it looked like this file was renamed:
```diff
--""lib/arm64-v8a/libSystem.Security.Cryptography.Native.OpenSsl.so"": {
++""lib/arm64-v8a/libSystem.Security.Cryptography.Native.Android.so"": {
```"
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/6947#discussion_r855212420","I think NuGet always puts `31.0` for all of `net6.0-android`, `net6.0-android31`, `net6.0-android31.0`."
"xamarin","xamarin-android","jonathanpeppers","https://github.com/xamarin/xamarin-android/pull/5748#discussion_r621504520","It looks like this project links in a few files from `Java.Interop.Tools.Cecil`, can you add a new file here:

https://github.com/xamarin/xamarin-android/blob/af7f7f5da475c5cb8d2d725d77082ba7915bbc7e/src/Microsoft.Android.Sdk.ILLink/Microsoft.Android.Sdk.ILLink.csproj#L43-L46

We probably should make this a regular project reference, but you don't have to do that here -- we can do it later."