"OrganizationLogin","RepositoryName","ReviewerLogin","HtmlUrl","Body"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/12203#discussion_r676987922","Should I create an issue and link that in the binding?"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/9660#discussion_r490448287","Thanks!"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/14033#issuecomment-1035010451","Will merge after issues with main are resolved!"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/12637#issuecomment-917127634","/azp run"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/14909#issuecomment-1118846861","@rolfbjarne  @mandel-macaque Would these need this variable too when we move out of .NET6?
https://github.com/xamarin/xamarin-macios/blob/main/tools/devops/automation/templates/build/api-diff-github-comment.yml#L95-L102

Again in that file here: 
https://github.com/xamarin/xamarin-macios/blob/main/tools/devops/automation/templates/build/api-diff-github-comment.yml#L178-L185"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/14221#discussion_r812421089","@rolfbjarne  Ah good catch! I didn't realize I was calling the same method... The reason I made this change is that the SetHighlightedItemForProperty (int property, int identifier) is Obsolete and suggests that I use this one - which in this case does not make sense. Should I in fact continue to use the obsoleted one?"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/12102#issuecomment-885657546","Updating to fix unrelated failure: https://github.com/xamarin/maccore/issues/2472"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/6521#discussion_r301715777","Thanks for catching these, I followed Sebastian's advice about removing the [Introduced] attribute and removing the messages that don't give us much info in the Enums.cs file but not this one. If the documentation does not give a good method to use instead, would I just clear the entire message for these as well? In this case, there are other functions that can fetch assets using different types of parameters. Should I say something along the lines of ""Use other fetchasset methods""?"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/14408#discussion_r826228115","I thought these were better to give us more detailed exceptions, but the compiler does not recognize these `ObjCRuntime.ThrowHelper.ThrowArgumentNullException`s as ending the method so I kept the old one at the end of the method..."
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/14931#issuecomment-1125246364","Merging since the test failures are unrelated timeouts!"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/13346#discussion_r768309013","@chamons @mandel-macaque AH okay thank you both for the explanations! I will get right on this :)"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/6437#discussion_r298290984","So if I call initWithFrame: CGRectMake (5,5,5,5)
I can create a LPLinkView with the size 5,5 at dimensions 5,5"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/11472#issuecomment-833906067","I noticed the OneLocBuild task has failing due to the PAT in a different branch while testing this.
Connor was able to fix it!
I also added another variable to use in place of isMain in this other branch so it runs OneLocBuild similar to how this PR should run on main [here](https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=4733060&view=logs&j=d4d86769-bae0-5955-544a-0740a81efd3c&t=b076b8fd-1a89-5fdb-2a15-f02f9055d0fd&l=211)."
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/14749#issuecomment-1100311275","Turning this into a draft since we will need more discussion on this before moving forward!"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/9545#issuecomment-683962823","Update: still testing on my end, for some reason @rolfbjarne 's solution isn't working on my end.. Sounds like it is working for others though."
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/10145#issuecomment-733189747","Working on a test for this now!"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/13977#issuecomment-1031532104","**Unrelated Test Failures**
- monotouch-test/Mac Catalyst [dotnet]/Debug [dotnet]: https://github.com/xamarin/maccore/issues/2443 and "
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/15098#discussion_r879578198","While I realize that I added a good amount of these and that SetData () throws an exception if the value arg is null, I thought it would be better to explicitly add the exceptions here and not use a `!`, but I am open to opinions!"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/6521#discussion_r301199357","I will make a comment of this too, but the reasoning is a little confusing to me. I remember I could not build the file and @dalexsoto may remember, but there is a file src/Photos/PHAssetChangeRequest.cs that has an Obsolete attribute in the PHAssetChangeRequest empty constructor and we deemed that is what was causing the build issue. However, now I am confused because this class is PHChangeRequest and not PHAssetChangeRequest. I can talk to Alex about this tomorrow and get back to you with more clarification."
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/14884#discussion_r864071756","Does this look okay?"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/14703#discussion_r845604246","@dalexsoto @stephen-hawley  does `Microsoft.Nnyeah` meet all these criteria? Also could this change be in a separate PR?"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/14491#discussion_r835670457","@rolfbjarne So I just tried to apply the mac attributes to this one and a few of them below that say they are available for mac as well and they were getting a lot of compile errors.

It turns out that these are the questionable interfaces in this src/quicklook.cs 
QLPreviewReply
QLPreviewReplyAttachment
QLFilePreviewRequest
QLPreviewProvider

It turns out that they are also in src/quicklookui.cs and are all decorated with mac attributes already.
Do you think this could be leading to the issue?
[Here is the gist](https://gist.github.com/tj-devel709/03492abdf722192da23b84ae921f7e05) with the errors that marking mac for each of these interfaces show"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/12405#discussion_r687010283","I'll just leave the action in!"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/12092#issuecomment-876849236","@mandel-macaque There was no MacCatalyst.todo, but most of these interfaces say they support MacCatalyst in the web docs.
I tried including the HomeKit in the MacCatalyst section of the frameworks.source file and I kept getting this error in the build:
```
build/dotnet/maccatalyst/generated-sources/ObjCRuntime/Libraries.g.cs(163,68): error CS0117: 'Constants' does not contain a definition for 'HomeKitLibrary'
make[1]: *** [build/dotnet/maccatalyst/64/Xamarin.MacCatalyst.dll] Error 1
```
Is this something I should do?"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/11481#discussion_r629635466","Are enums int by default? If so, is there a reason to declare int?"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/6589#discussion_r303973997","Right now it is set as a property though and properties don't need a verb correct? I can revert to a method though."
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/13400#issuecomment-973547871","/azp run"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/15032#discussion_r872798072","```suggestion
							configIgnored |= !jenkins.TestSelection.IsEnabled (TestLabel.iOS64);
```"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/14482#discussion_r834373894","Okay, applied!"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/13666#discussion_r782199530","```suggestion
			if (pti_n is null)
```
Maybe"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/15041#discussion_r876328098","```suggestion
		All =  0xFFFFFFFF,
```
nit, small extra space"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/14134#discussion_r808557835","How about `WeakExternalPlaybackVideoGravity = value.HasValue ? AVPlayerLayer.EnumToKey (value.Value)! : null!;`"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/12604#issuecomment-917246519","**Unrelated Test Failures:** 
dont link/Mac Catalyst [dotnet]/Release [dotnet]: TimedOut (Execution timed out after 1200 seconds.
No test log file was produced)
https://github.com/xamarin/maccore/issues/2414

link sdk/tvOS - simulator/Debug: Failed
link sdk/tvOS - simulator/Release: Failed
https://github.com/xamarin/xamarin-macios/issues/12640"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/14269#discussion_r816220497","```suggestion
        # assert that the links are correct
```"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/14636#issuecomment-1090488920","/azp run"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/14100#issuecomment-1032720025","**Unrelated Test Failure**
- monotouch-test/Mac Catalyst [dotnet]/Debug [dotnet]: https://github.com/xamarin/maccore/issues/2451"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/12189#discussion_r689685069","Good catch! Removing now!
"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/12163#discussion_r675016941","```suggestion
	[BaseType (typeof (NSObject))]
```
small also"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/14732#discussion_r850475881","nit: missing new line"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/14048#issuecomment-1030586784","/azp run"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/11846#issuecomment-855215082","/azp run"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/12092#issuecomment-884555863","@spouliot  @rolfbjarne @dalexsoto 
So I'm not sure if this is sufficient but I included Mac in an iOS Xcode project (which I think is how you enable Mac Catalyst), included HomeKit, and then called some things that are supported in Mac Catalyst (14,0) according to the web docs and Xcode does not complain about it!
https://gist.github.com/tj-devel709/07da0aff16246e04154e0a7f49acc9a4"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/12745#issuecomment-922964408","/azp run"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/14258#discussion_r815225512","lol"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/12771#discussion_r712210136","Looks like extra indentation here"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/11945#discussion_r653091350","Oops sorry, actually forgot it haha"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/10919#discussion_r598007616","Thanks for explaining! :)"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/14134#discussion_r809189702","@rolfbjarne that is a great question... Yeah this is the generated method signature:
`public virtual bool SetCategory (string category, AVAudioSessionCategoryOptions options, out NSError outError)`
And CategoryToToken says it returns an `NSString?`
Although there are no compiler warnings/errors regarding this.."
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/13787#discussion_r787828799","Should we be replacing this `#if XAMCORE_4_0` with an `#if NET`?"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/13027#discussion_r732262125","@mandel-macaque maybe just an if statement inside that makes those changes ~ adds watch to the legacy and doesn't go though the platforms for the dotnet_iOS_MacCatalyst?"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/12074#issuecomment-875914909","Unrelated failing test: https://github.com/xamarin/maccore/issues/2434"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/12203#discussion_r676699377","So I actually don't who told me to add the Sealed, perhaps @dalexsoto ?
But when I remove it, I get these build errors: https://gist.github.com/tj-devel709/d459d9e717a186486deab6479f57c050
"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/14597#discussion_r840060851","Sebastien recommended that we change the ArgumentNullException's as well in these Nullability PRs
https://github.com/xamarin/xamarin-macios/wiki/Nullability#how-1"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/13534#discussion_r766873165","It's the first time I remember seeing `|=` cool haha"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/13915#discussion_r793687408","Same here"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/9720#discussion_r498927591","What does this line do?"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/12025#discussion_r659050057","There a few others as well!"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/9889#issuecomment-710657421","* accidentally pulled xamarin/main. Trying to revert merge. Added do-not-merge for now"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/11987#discussion_r655627430","Oops forgot to run tests, I'll do that now"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/10938#discussion_r599656460","```suggestion
	xamarin_assertion_message (""The method %s is not implemented yet for CoreCLR"", __func__);
```
Maybe typo?"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/13884#discussion_r792773526","nit: extra new line"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/9855#discussion_r504270111","Oh okay yeah sure that makes sense!"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/12566#discussion_r697648832","Looks like Sebastien's test fails when these are removed so maybe they are needed:
```
[FAIL] 'AudioToolbox.AudioChannelFlags' has legacy attribute(s): [Introduced (PlatformName.WatchOS, 3,0)]
[FAIL] 'AudioToolbox.MPEG4ObjectID' has legacy attribute(s): [Introduced (PlatformName.WatchOS, 3,0)]
```"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/13328#discussion_r745915888","```suggestion
		Neuter,
```"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/15155#issuecomment-1145283192","Closing due to https://ceapex.visualstudio.com/CEINTL/_workitems/edit/605309#10302397"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/14426#discussion_r828319861","```suggestion
			if (prop.SetMethod is not null)
```"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/9700#discussion_r495140003","perhaps 'duplicated'?"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/11395#discussion_r623958856","Thanks!"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/13784#discussion_r787186650","Enum value looks strange"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/6625#discussion_r305658711","You can add the iOS availability on enums and their individual values too. 

[iOS (13,0)]
Automatic,
[iOS (13,0)] 
AutomaticOutLine, 

Also just a small thing but add a comma after the AutomaticOutLine so that if anyone else ever adds something to your enum, their name won't show up in the blame and seem like they added that value. Great job! :)"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/14741#discussion_r849937906","The above changes were to account for `NLLanguageExtensions.GetConstant (item.Key)` possibly being null, but not sure if all this was neccessary"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/14328#issuecomment-1067080245","Closing this PR in favor of: https://github.com/xamarin/xamarin-macios/pull/14394

This one was having test failures that I was waiting on, but a new (weekly) version of the localization PRs came out which includes all the changes in this PR and more!"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/12062#issuecomment-872573513","/azp run"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/11790#issuecomment-854793608","> OK, let's YOLO this 😁

Sounds good 😂"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/12619#issuecomment-914558235","/azp run"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/9482#issuecomment-680053751","> @tj-devel709 changes look good. Interestingly all the ignored enums and functions are in all platforms supported by the framework. There is an option to create a single ignore file that uses common-* as the prefix rather than the platform name. Food for though 😉

@mandel-macaque  Would you recommend that I change it to common? Would it still be okay in common if it doesn't cover watchOS also?"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/13791#discussion_r788878667","Flagging just in case since lowest supported is 10.14"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/13794#discussion_r788881959","Flagging this just in case - not supported iOS version in .NET"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/12621#issuecomment-914566988","**Unrelated test failure**

monotouch-test/tvOS - simulator/Debug: Failed
https://github.com/xamarin/maccore/issues/1605"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/14411#issuecomment-1068349205","**Unrelated Test Failure**

- link all/Mac [dotnet]/Debug [dotnet]: https://github.com/xamarin/maccore/issues/649"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/12130#issuecomment-885642116","Updating to fix this unrelated issue: https://github.com/xamarin/maccore/issues/2472"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/14280#issuecomment-1059591058","**Unrelated Test Failures**
- link sdk/Mac Catalyst [dotnet]/Debug [dotnet]: https://github.com/xamarin/maccore/issues/2414
- trimmode copy/Mac Catalyst [dotnet]/Release [dotnet]: https://github.com/xamarin/maccore/issues/2414

**Unrelated Build Failure**
https://github.com/xamarin/maccore/issues/2545

"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/14781#issuecomment-1106578989","These paths are incorrect - WIP"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/6589#discussion_r303980498","Will do!"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/14764#discussion_r853300608","This is cool, I didn't know we could do this"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/14941#issuecomment-1125236704","Merging since the test failures are unrelated timeouts!"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/14134#issuecomment-1062018360","Oh gosh, I really messed that up ☝️"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/6374#discussion_r295485608","Alex helped suggest that name since the comment on xcode is ""/// The handle for the person that will be displayed on the incoming call notification."""
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/13346#discussion_r767930935","I thought the point of adding the setup was to delete the assets in the setup and not have to do it inside the tests. Otherwise, I don't see the point in having the setup since it would just be creating the project_path that we need to now use instance variables for. I guess the delete can happen in the tear down as well and then the delete in the setup would just make sure it is not there, the test would add it, and then the clean up would remove it and then it would be the same as before we started the test!"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/13027#discussion_r732264660","@mandel-macaque hmmm what does the semicolon in this path name do?
`$apiDiffRoot=""$Env:VSDROPSPREFIX/$Env:BUILD_BUILDNUMBER/$Env:BUILD_BUILDID/apidiff/;/""`
Perhaps this will give me a clue on how the apidiff directory is being set?"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/14749#issuecomment-1100306395","> @tj-devel709 let me know if the json was tool generated, in that case ignore my comments.

Yes they were auto generated. The output used spaces instead of tabs though so it is possible that I messed up indentation when trying to use tabs to not show changes in Rolf's existing json"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/12876#issuecomment-930751391","Awesome, thanks @mandel-macaque !!"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/13896#discussion_r793701858","Do we want to remove these maccatalyst's?"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/14029#issuecomment-1032722045","Sorry, my mistake, both test failures are unrelated:

- monotouch-test/Mac Catalyst [dotnet]/Debug [dotnet]: https://github.com/xamarin/maccore/issues/2451 and https://github.com/xamarin/maccore/issues/2443"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/9971#discussion_r514480950","Also if I try (IList<string>) as a cast, I get this:
System.InvalidCastException : Specified cast is not valid.
  at Xamarin.iOS.Tasks.LocalizationStringTest.ReadFile (System.String path) [0x00016] in /Users/tjlambert/Documents/AllStrings/xamarin-macios/tests/msbuild/Xamarin.MacDev.Tasks.Tests/TaskTests/LocalizationStringTest.cs:154 
  at Xamarin.iOS.Tasks.LocalizationStringTest.SetUp () [0x00001] in /Users/tjlambert/Documents/AllStrings/xamarin-macios/tests/msbuild/Xamarin.MacDev.Tasks.Tests/TaskTests/LocalizationStringTest.cs:94 
  at (wrapper managed-to-native) System.Reflection.RuntimeMethodInfo.InternalInvoke(System.Reflection.RuntimeMethodInfo,object,object[],System.Exception&)
  at System.Reflection.RuntimeMethodInfo.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x0006a] in /Users/builder/jenkins/workspace/build-package-osx-mono/2019-06/external/bockbuild/builds/mono-x64/mcs/class/corlib/System.Reflection/RuntimeMethodInfo.cs:395 
"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/14426#discussion_r828320382","```suggestion
			if (@event.RemoveMethod is not null)
```"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/13590#discussion_r771725649","```suggestion
				throw new InvalidOperationException (platform.ToString ());
```
small formatting"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/12463#issuecomment-900447033","Sorry, I don't think this one is actually ready for review. I think there are some things in the headers that were not mentioned by xtro that need updating!"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/13285#discussion_r743809782","```suggestion
    # we set the result to 0, the reason is that release pipelines do not like failing tests,
```
small typo"
"xamarin","xamarin-macios","tj-devel709","https://github.com/xamarin/xamarin-macios/pull/14341#discussion_r822126630","That is a good point.
Because these files are not in the xamios.csproj (or frameworks.sources), I added them to the xamios.csproj just to handle the nullability since visual studio underlines them, but there are a lot of things that Visual Studio can't tell me and one of those things is what the heck the Credentials variable is. Thus I cannot find the method for Credentials.GetCredential... I still don't know where these files are being used, but building main does complain if I don't fix all the nullability
![image](https://user-images.githubusercontent.com/50846373/157335954-b64d9a52-f33d-476a-b69d-5c4f1a38bedc.png)
"